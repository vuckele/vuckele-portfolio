---
import { Moon, Sun } from "lucide-react";
import { cn, buttonVariants } from "@/lib/utils";
---

<button
  id="theme-toggle"
  class={cn(
    buttonVariants({ size: "icon", variant: "ghost" }),
    "cursor-pointer rounded-full"
  )}
>
  <Sun
    id="sun-icon"
    className="h-[1.2rem] w-[1.2rem] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90"
  />
  <Moon
    id="moon-icon"
    className="absolute h-[1.2rem] w-[1.2rem] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0"
  />
  <span class="sr-only">Toggle theme</span>
</button>
<script is:inline>
  // Check for theme preference in localStorage or Default
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return "dark"; // Default: Dark mode
  };

  // Set theme on document and in localStorage
  const setThemeAppearance = theme => {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("theme", theme);
  };

  // Toggle theme function
  const toggleMode = () => {
    const isDarkMode = document.documentElement.classList.contains("dark");
    const newTheme = isDarkMode ? "light" : "dark";
    setThemeAppearance(newTheme);
  };

  // Apply the theme immediately to avoid flash
  const theme = getThemePreference();
  setThemeAppearance(theme);

  // Set up event listener immediately
  const setupEventListener = () => {
    const toggleButton = document.getElementById("theme-toggle");
    if (toggleButton) {
      toggleButton.removeEventListener("click", toggleMode); // Remove any existing listener
      toggleButton.addEventListener("click", toggleMode);
    }
  };

  // Set up the listener immediately
  setupEventListener();

  // Also set up the listener on page load
  document.addEventListener("astro:page-load", setupEventListener);
</script>
